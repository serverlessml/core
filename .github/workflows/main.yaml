name: Build

on:
  push:
    branches:
      - master
    paths:
      - "src/**"
      - "Dockerfile*"
      - "main.py.*"
  pull_request:
    branches:
      - master
    types:
      - closed
  workflow_dispatch:

jobs:
  build-n-push:
    if: github.event.pull_request.merged == true || github.event != "pull_request"
    strategy:
      matrix:
        pyver: [3.8, 3.7]
        platform: [aws, gcp]
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
      DOCKER_BUILDKIT: 1
      ENV_PY_VER: ${{matrix.pyver}}
      ENV_PLATFORM: ${{matrix.platform}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build base image
        run: make build PY_VER=${ENV_PY_VER} PLATFORM=${ENV_PLATFORM}

      - name: Build demo image
        run: make build PY_VER=${ENV_PY_VER} PLATFORM=${ENV_PLATFORM} DEMO_SUFF=".demo"

      - name: Integration test
        run: |
          make run-${ENV_PLATFORM}-local PY_VER=${ENV_PY_VER} PLATFORM=${ENV_PLATFORM} DEMO_SUFF=".demo"
          pip3 install -r requirements-test.txt
          make test-e2e
          make rm PLATFORM=${ENV_PLATFORM}

      - name: Auth with docker hub
        run: echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_USER}" --password-stdin
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

      - name: Push images
        run: |
          make push PY_VER=${ENV_PY_VER} PLATFORM=${ENV_PLATFORM}
          make push-latest PY_VER=${ENV_PY_VER} PLATFORM=${ENV_PLATFORM}
